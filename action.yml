name: 'Run Jenkins Job and get build result'
description: 'Triggers Jenkins Job and get build result'
author: 'Toptal'
inputs:
  jenkins_url:
    required: true
    description: 'Jenkins domain URL'
  jenkins_user:
    required: true
    description: 'Jenkins username'
  jenkins_token:
    required: true
    description: 'Jenkins API token that belongs to jenkins_user'
  job_name:
    required: true
    description: 'Jenkins job to triggered and follow up'
  jenkins_client_id:
    required: true
    description: 'Jenkins Client ID used with IAP'
  jenkins_sa_credentials:
    required: true
    description: 'Jenkins service account credentials to use with IAP'
  gcr_account_key:
    description: 'Account key to connect to GAR'
    required: true
  job_params:
    description: 'Jenkins build job parameters, encoded in JSON'
    required: false
    default: ''
  job_timeout:
    description: 'Jenkins job timeout period. Default 30 seconds'
    required: false
    default: '30'
  async:
    description: 'Set to true if you want to just trigger the job without waiting for it to finish'
    required: false
    default: 'false'
outputs:
  jenkins_job_url:
    description: 'URL to the job details'
    value: ${{ steps.jenkins_job.outputs.job_url }}
runs:
  using: composite
  steps:
    - uses: docker/login-action@v2
      with:
        registry: us-central1-docker.pkg.dev
        username: _json_key
        password: ${{ inputs.gcr_account_key }}

    - name: Auth with jenkins-sa
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ inputs.jenkins_sa_credentials }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Generate IAP auth token
      shell: bash
      id: iap_token
      run: |
        token=$(gcloud auth print-identity-token \
        --audiences ${{ inputs.jenkins_client_id }} \
        --include-email \
        --impersonate-service-account jenkins-sa@toptal-ci.iam.gserviceaccount.com)
        echo iap_token=$token >> $GITHUB_OUTPUT

    - name: Run Trigger Jenkins Job
      id: jenkins_job
      shell: bash
      run: |
        echo dummy=1234 >> $GITHUB_OUTPUT
        job_url=$(docker run --rm \
        -e jenkins_url=${{ inputs.jenkins_url }} \
        -e jenkins_user=${{ inputs.jenkins_user }} \
        -e jenkins_token=${{ inputs.jenkins_token }} \
        -e job_name=${{ inputs.job_name }} \
        -e job_params='${{ inputs.job_params }}' \
        -e job_timeout=${{ inputs.job_timeout }} \
        -e iap_token=${{ steps.iap_token.outputs.iap_token }} \
        -e GITHUB_OUTPUT=/home/runner/outputs/${GITHUB_OUTPUT##*/} \
        -v ${GITHUB_OUTPUT%/*}:/home/runner/outputs \
        us-central1-docker.pkg.dev/toptal-hub/containers/toptal-jenkins-job-trigger-action:latest)
        echo $job_url >> $GITHUB_OUTPUT

branding:
  icon: 'check-circle'
  color: 'green'
